# Generated by Django 3.2.9 on 2021-12-13 07:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ulid.api.api
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=ulid.api.api.Api.new, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='メールアドレス')),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='氏名')),
                ('user_type', models.IntegerField(default=0, verbose_name='ユーザータイプ')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NormalUser',
            fields=[
                ('id', models.CharField(default=ulid.api.api.Api.new, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=32, verbose_name='ニックネーム')),
                ('gender', models.IntegerField(blank=True, default=0, verbose_name='性別')),
                ('phone_number', models.CharField(blank=True, max_length=16, verbose_name='電話番号')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='normal_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'normal_user',
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.CharField(default=ulid.api.api.Api.new, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=32, verbose_name='法人名称')),
                ('address', models.IntegerField(blank=True, default=0, verbose_name='本社所在地')),
                ('phone_number', models.CharField(blank=True, max_length=16, verbose_name='電話番号')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company_user',
            },
        ),
    ]
